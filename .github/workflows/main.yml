name: CICD
on:
  workflow_dispatch:
env:
  PROJECT_ID: "zerok-dev"
  GKE_SA_KEY: "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiemVyb2stZGV2IiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiOGMwYzU4OTU3MGViYzQwYzA3MjQ2ODkyZDg0ZWY3ZWMzZDBjMjYzYiIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZnSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2d3Z2dTa0FnRUFBb0lCQVFEWEZvVXg5YTNWd215N1xuTEx0QlpDTGYySDg3OGJVZm1lSW1yejJqcTVGV29ieXpKMUM2THc1MnVFMXl5d0t5QWpGc24rdzJqNGs1ZHRycFxucU02a09BTS9raUtpbnNPQlZPLy9Sc09RSStmbDF4d1F5MGltVDNjMjlyR2Qrb0VtbTcycG51aXJJMnBrQk1ZRFxuMEpFQmlYcHdGcWRxNnlsZmhiS1BKM2FBWHNPZ1lqWFlTVUZMNkhKN29MQ1BYNW1NNnJsT2NvTnhkS2pBU2lId1xuWnJoS3BEenBhRDFzbUE3Yk1XU1A5a0cwRXFwM2dVaWtmZElWa3NSaEFyc2hyS2VSUVliWDhxd2JVc2JCL2ljTlxuUnVKZEZEUXhFb09yMmIwbEE3WStkc0o3S0UzQzhBOWlpSkpWc0JSOGxqcWJEazE1Z29QV1dtL3EyZklIZVJGaFxuYVc4a1c1NEhBZ01CQUFFQ2dnRUFDYWhreUs2QVpMcFdtODgvRjRsSzBDamNDa1FFVExVWTVLWEk0bFJic2QvK1xuSllrNFFBWTI0NTRVWFZTLy9CY1RzTVRPSEZFUU1zSHNlc0pKaUhzRDlKd1RXdW1zcE12aElTc2YxU2Q4SjNYL1xuWE1KQnNyVGt2K2ZGUTF6VzVTekRvbWNtOXhUV2N0WFZ3QTVpc2l0bWtaZFFoN2dSZFY5SU1SdnU4Yzg5TjN1WFxueFAyREVaY0djK3hoVVcwSU5qcVhDNndSbzZHNlFZQ2Z0YkQvYkYyOFZ6N3Brc1pKVTZmMXdIakN6dnBLcTBGMlxuaEhBOHdqYytYVENDMlRVRTEyZFN1MnZ4eTZHWVZMOGtIazRJV2YzQVhrSzArdzFNcXZPYkdMM0srbGNZZXoxUFxub0VnUWVSeTE0SmV4UmlBL3dhUGtVU2pBRjVxUkYwU1J0RmNvcDJkeG9RS0JnUUQzUXoreVlMVWtnL1d3WTJSMlxuS2ljSVREYTljRUZLSkg5UTFiejBaTVdodXlNUXpvUEk1bnBKN3FRcG5oWFo1SzNGRzJWR2dqSHVkVDlqWWZCSFxuYjloQmtjZlh0L0FmTnpUQXhadHVGb2V1R2x4OEt2RUlXaXExSFJqM3REVWJ6Wkd5OE5qUTk2SllpdDRrVHAvSFxubGNNa0RRdGVFY1c4MGlaVytzaWo2RjlyOXdLQmdRRGVzRGVmZWVOYVZtdG1LODBwZlhCemV4VnhwV081TXhZUFxub0ROSCtVRm9ZS2ZCT3pwMGZaVVhTV3lOcHBCUVNKaVRmU3lTOTlUMXpENmZoT091TFhPc1hDU1ZuWGEzV0d6dlxucEkzbjdTOGx2Q3NIUTNkdExJNVZoYWZpMmNKZWxSVnZJamFCbjFJak91VGdSQkp4ZmlzbTAwdUJoS01OOXByV1xuS1BYOG9yRTZjUUtCZ0cwUjZBNGFaSzFIM0YvRGFEUkxvYzRpT0Y5V0hpYkRkTG5HbnNRN2s0WWxFM0c5ZHhwdVxudUhEV2FPbkd4eUxIb2ZONWd6SVlDa2lDeGNSa0ZtYWNxb3M1OENwekErUHhLVDhEcSsxaTJOVHU0ZThQemlUK1xuQ1NxOVBCOUFDZEZLMjhOUVJJUGhTR2JBVXY4M0EzbzUwTXVkU1c5a2JaSStMUlZmS0pSTTA1Sy9Bb0dCQUxsNFxubTFzLzhaUDBGazlxZTkzcWxCWWFsYW1wem4wWmgyNU1SMm5TdUI5dklVbFhRMEJ5dUJKRkhSeDlkZ1RuOGV3bFxuZlZLTEI5d1EyTGVUdnUzNi9UUzVLZDlTM3VXbHlGVndBS0VDY3hwQ3RyTytCV0h3a2p1NHJqUEttcENjS3RYOFxuOE5qVkVWdzJXUnBRbCt2ZTRhSGNxaTZkZ2hESEsvN2k3cjRUNHZpQkFvR0JBTWlIRWxxUm9SQWsvbWNwc1ZYZ1xuWU9TLzlIRERJK0R4ekRSSnlDRlFUYktZa2ZzaS81TjFrcHMrclBjM1FFNHh3SXNxODFmWU5DV2RMOU9VS1hUNlxuUHc3eHhOMXRmLzU0dXU5QUNCSjA4eUlyYUlGUkYxY09MVS9hU0hGZXV4TEZZbytZK0cvZ0xRTmVhc0pJRm5pa1xuWGZrTDNpR3RTWlFjbDhsQmxTbjFKK211XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAiZ2l0aHViLWNpY2RAemVyb2stZGV2LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjExMjU2NjI2MjQ3NDk3MzcyNjA4MSIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZ2l0aHViLWNpY2QlNDB6ZXJvay1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K"
  GKE_CLUSTER: "zerok-c2s-poc"
  GKE_ZONE: "us-west1-b"
  APP_NAME: "zerok-dashboard"
  DOCKER_REG: "us-west1-docker.pkg.dev"
  DOCKER_REPO: "c2s-poc"
  NS: "apps"
  ENV: "poc"

  
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          
      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install 
          
      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build
          
      - name: decode-base64-github-action
        uses: akiojin/decode-base64-github-action@v0.1.0
        with:
          base64: ${{ env.GKE_SA_KEY }}
          environment: DECODED_SA  
          
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.DECODED_SA }}'
        

      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          export_default_credentials: true
      - name: login to artifact registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
           cluster_name: '${{ env.GKE_CLUSTER }}'
           location: '${{ env.GKE_ZONE }}'

      - name: Docker build
        run: |-
            docker build  --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA" .
      
      - name: Docker push
        run: |-
            docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA"


  deploy:
    runs-on: self-hosted
    steps:  
      - name: Checkout
        uses: actions/checkout@v3
      - name: decode-base64-github-action
        uses: akiojin/decode-base64-github-action@v0.1.0
        with:
          base64: ${{ env.GKE_SA_KEY }}
          environment: DECODED_SA  
          
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.DECODED_SA }}'
        

      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          export_default_credentials: true
      - name: login to artifact registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
           cluster_name: '${{ env.GKE_CLUSTER }}'
           location: '${{ env.GKE_ZONE }}'      
      - name: Set up helm
        run: |-
           curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
           chmod 700 get_helm.sh
           ./get_helm.sh
      
      - name: Deploy
        run: |-
             helm --install  \
             --set=image.repository=$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME \
             --set=image.tag=$GITHUB_SHA \
             ==set=REACT_APP_FIREBASE_API_KEY=$REACT_APP_FIREBASE_API_KEY \
             upgrade $APP_NAME \
              -f ./helm-charts/$ENV.yaml ./helm-charts/ \
              --namespace $NS 
 
